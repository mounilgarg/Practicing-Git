//create, initialise and display a LL using traversal algo
//seaching sorted and unsorted LL

#include<iostream>
#include<conio.h>
#include<stdlib.h>
using namespace std;

struct node//structure of a node
{
	int data;
	struct node*link;	
};

struct node* enterData(struct node*p)
{
	struct node*prev;
	struct node*n;
	n=(struct node*)malloc(sizeof(struct node));
	cout<<"Enter data for first node:"<<endl;
	cin>>n->data;
	n->link=NULL;
	p=n;
	cout<<"Press y to add more nodes:"<<endl;
	char ch;
	cin>>ch;
	while(ch=='y')
	{
		prev=n;
		n=(struct node*)malloc(sizeof(struct node));
		cout<<"Enter data for new node:"<<endl;
		cin>>n->data;
		n->link=NULL;
		prev->link=n;
		cout<<"Press y to add more nodes:"<<endl;
		cin>>ch;
	}
	cout<<"Enter number to be added:"<<endl;
	return p;
}

void dispData(struct node*p)
{
	struct node *next;
	next=p;
	system("cls");
	cout<<"\nThe linked list is:"<<endl;
	int count=0;
	
	while(next !=NULL)
	{
		cout<<next->data<<" ";
		count++;
		next=next->link;
	}
	cout<<"\n\nThere are "<<count<<" elements in the list."<<endl;
}
void search(struct node*p)
{
	struct node *prev;
	prev=p;
    cout<<endl<<"Enter element to be searched:"<<endl;
    int item;
    cin>>item;
    int pos=0;//to find location of element

	while(prev !=NULL)
	{
		if(prev->data==item)
		{
			pos++;
			break;
		}
		else if(prev->data>item)//for sorted lists only include this
		{
			pos=0;
			break;
		}
		else
		{
			if(prev->link==NULL)
				pos=0;
			else
				pos++;
			prev=prev->link;
		}
	}
	
	if(pos==0)
	{
		cout<<endl<<item<<" is not found the list."<<endl;
	}
	else
	{
		cout<<endl<<item<<" is found at position "<<pos<<endl;
	}
}

int main()
{
	struct node*start=NULL;
	
	start=enterData(start);
	dispData(start);
	search(start);
	return 0;
}